{
  "compilerOptions": {
    "target": "ES2022" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": [
      "ES2020"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "module": "CommonJS",
    "moduleResolution": "Node" /* Specify how TypeScript looks up a file from a given module specifier. */ /* List of file name suffixes to search when resolving a module. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "declarationMap": true /* Create sourcemaps for d.ts files. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "removeComments": true /* Disable emitting comments. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    // ----
    "strictNullChecks": true,
    "strictFunctionTypes": true, // Checks function types rigorously.
    "strictPropertyInitialization": true,
    "noImplicitThis": true, // Catches `this` context errors.
    "alwaysStrict": true,
    "noFallthroughCasesInSwitch": true, // Catches cases where switch statements can fall through.
    "noImplicitReturns": true // Ensures functions return a value in all code paths.
  }
}
